.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DH_PYCENTRAL 1"
.TH DH_PYCENTRAL 1 "2009-11-14" "" "Debhelper"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dh_pycentral \- use the python\-central framework to handle Python modules and extensions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBdh_pycentral\fR [\fIdebhelper\ options\fR] [\fB\-n\fR] [\fB\-X\fR\fIitem\fR] [\fB\-V\fR \fIversion\fR] [\fImodule\ dirs\ ...\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
dh_pycentral is a debhelper program that will scan your package, detect
public Python modules and move them in /usr/share/pycentral so that
python-central can byte-compile those for all supported Python versions.
Extensions are kept into the original installation location.
.PP
Moving the files to the pycentral location and adding symbolic links to
/usr/lib/pythonX.Y/*\-packages can be done by setting the environment
varibale \s-1DH_PYCENTRAL\s0 to a string containing the string \fBinclude-links\fR.
.PP
Moving the files to the pycentral location can be disabled by setting
the environment varibale \s-1DH_PYCENTRAL\s0 to a string containing the
string \fBnomove\fR.
.PP
#To shorten the time of unavailabilty of files during unpack and
#configure, dh_pycentral does the symlinking in the preinst and does
#not remove the symlinked files on upgrade. This can be disabled by
#setting the environment varibale \s-1DH_PYCENTRAL\s0 to a string containing
#the string \fBnoprepare\fR. If the newer version of a package needs to
#remove the symlinked files on upgrade, either the package needs to
#take care of the removal by calling \fBpycentrel pkgremove\fR in the new
#preinst, or leaving a file /var/lib/pycentral/<package>.pkgremove and
#using pycentral 0.6.7 or later for the old package version.
.PP
The functionality to shorten the time of unavailabilty of files during
unpack and configure has been removed (symlinking files in the preinst
and not removing the symlinked files on upgrade) in version 0.6.9.
.PP
You must have filled the XS-Python-Version header to indicate the
set of python versions that are going to be supported. dh_pycentral
expects the XB-Python-Version for each binary package it is supposed
to work on.
.PP
dh_pycentral will also generate substitution variables: the
${python:Provides} variable will contain versioned provides of the package
(if the package's name starts with \*(L"python\-\*(R"). A python-foo package could
provide \*(L"python2.3\-foo\*(R" and \*(L"python2.4\-foo\*(R" at the same time. Python
extensions have to provide those whereas it's only option for pure python
modules.
.PP
The ${python:Versions} variable should be used to provide the required
XB-Python-Version field listing the python versions supported by the
package.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fImodule dirs\fR" 4
.IX Item "module dirs"
If your package installs python modules in non-standard directories, you
can make dh_pycentral check those directories by passing their names on the
command line. By default, it will check /usr/lib/$PACKAGE, /usr/share/$PACKAGE,
/usr/lib/games/$PACKAGE, /usr/share/games/$PACKAGE, /usr/lib/python?.?/site\-packages
and /usr/lib/python?.?/dist\-packages.
.Sp
Note: only /usr/lib/python?.?/site\-packages and the
extra names on the command line are searched for binary (.so) modules.
.IP "\fB\-V\fR \fIversion\fR" 4
.IX Item "-V version"
If the .py files your package ships are meant to be used by a specific
pythonX.Y version, you can use this option to specify the desired version,
such as 2.3. Do not use if you ship modules in /usr/lib/site\-python.
.Sp
With the new policy, this option is mostly deprecated. Use the
XS-Python-Field to indicate that you're using a specific python version.
.IP "\fB\-n\fR, \fB\-\-noscripts\fR" 4
.IX Item "-n, --noscripts"
Do not modify postinst/postrm scripts.
.IP "\fB\-X\fR\fIitem\fR, \fB\-\-exclude=\fR\fIitem\fR" 4
.IX Item "-Xitem, --exclude=item"
Exclude files that contain \*(L"item\*(R" anywhere in their filename from being
taken into account to generate the python dependency. You may use this
option multiple times to build up a list of things to exclude.
.SH "CONFORMS TO"
.IX Header "CONFORMS TO"
Python policy, version 0.4.1 (2006\-06\-20)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBdebhelper\fR\|(7)
.PP
This program is a part of python-central but is made to work with debhelper.
.SH "AUTHORS"
.IX Header "AUTHORS"
Raphael Hertzog <hertzog@debian.org>
.PP
Also includes bits of the old dh_python written by Josselin Mouette
<joss@debian.org> who used many ideas from Brendan O'Dea <bod@debian.org>.
